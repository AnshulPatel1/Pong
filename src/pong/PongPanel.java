/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PongPanel.java
 *
 * Created on 24-Mar-2015, 2:53:12 PM
 */

package pong;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.Timer;

/**
 *
 * @author 133371
 */
public class PongPanel extends javax.swing.JPanel {
    
    private Game game;
    /** Creates new form PongPanel */
    public PongPanel() {
        initComponents();
        this.game = new Game();
              //set a timer
        Timer myTimer = new Timer(30, new ActionListener(){
            public void actionPerformed(ActionEvent evt){

                formActionPerformed(evt);
            }

        });
        myTimer.start();
        this.setFocusable(true);
        this.requestFocusInWindow();
    }
    public void paint(Graphics g){
        super.paint(g);
        this.game.paint(g);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    //this method runs when a key is pressed
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_UP){//human paddle moves up when human press the up key
            this.game.humanPaddle.change(-10);//paddle move 10 Y pixels up
            if(this.game.humanPaddle.getY() <= 0 && evt.getKeyCode() == KeyEvent.VK_UP){//human paddle collision for top wall
                this.game.humanPaddle.setY(0);
            }
        }
        else if(evt.getKeyCode() == KeyEvent.VK_DOWN){//when a human pressing down key
            this.game.humanPaddle.change(10);//paddle mves 10 Y pixels down
            if(this.game.humanPaddle.getY() >= 290 && evt.getKeyCode() == KeyEvent.VK_DOWN){//human paddle collision for bottom wall
                this.game.humanPaddle.setY(290);
            }
        }
    }//GEN-LAST:event_formKeyPressed

    //this method runs once every 30 milliseconds
     private void formActionPerformed(ActionEvent evt) {
        //calling the methods from game class
        game.ballUpdate();
        game.ballCollision();
        game.paddleCollision();
        game.computerPaddleMovement();
        this.repaint();
        game.ballReset();
        game.gameScore();
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
